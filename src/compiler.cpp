#include "compiler.h"

#include <sstream>

namespace up
{
    Compiler::Compiler()
        : scanner(*this), parser(scanner, *this)
    {}

    int Compiler::parse(const std::string &FILE_PATH)
    {
        // Init variables
        program = "// Code generated by Up compiler\n";


        // Scan
        int ret = 0;
        ret = scan(FILE_PATH);

        if (ret != 0)
            return ret;

        // Generate
        ret = generate();

        if (ret != 0)
            return ret;

        // TODO : Write into a file
        cout << "Program transpiled :\n\n";
        cout << program;

        return ret;
    }

    int Compiler::scan(const std::string &FILE_PATH)
    {
        if (!scanner.beginParse(FILE_PATH))
        {
            scanner.endParse();
            return -1;
        }

        int ret = parser.parse();

        scanner.endParse();

        return ret;
    }

    int Compiler::generate()
    {
        // !!! Tests //
        program += "int main() {\n";

        // Declare variables
        for (auto v : vars)
            program += "\t" + v.declare() + "\n";

        // End of main
        program += "\treturn 0;\n}\n";
        // !!! End tests //

        return 0;
    }
} // namespace up
