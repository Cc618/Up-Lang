#include "compiler.h"

#include <sstream>

namespace up
{
    Compiler::Compiler()
        : scanner(*this), parser(scanner, *this)
    {}

    Compiler::~Compiler()
    {
        for (const Statement *s : statements)
            delete s;
    }

    int Compiler::parse(const std::string &FILE_PATH)
    {
        // Init variables
        program = "";

        // Scan
        int ret = 0;
        ret = scan(FILE_PATH);

        if (ret != 0)
            return ret;

        // Generate
        ret = generate();

        if (ret != 0)
            return ret;

        // TODO : Write into a file
        cout << "Transpiled program :\n\n";
        cout << program;

        return ret;
    }
    
    void Compiler::import(const Module &MOD)
    {
        // Special module that gathers multiple modules
        if (MOD.name == "libc")
        {
            modules.push_back(Module("stdio", false));
            modules.push_back(Module("stdlib", false));
            modules.push_back(Module("math", false));
        }
        else
            modules.push_back(MOD);
    }

    int Compiler::scan(const std::string &FILE_PATH)
    {
        if (!scanner.beginParse(FILE_PATH))
        {
            scanner.endParse();
            return -1;
        }

        int ret = parser.parse();

        scanner.endParse();

        return ret;
    }

    int Compiler::generate()
    {
        // Header
        program += "// Code generated by the Up compiler\n\n";

        // Add all imports at the head of the source file
        parseModules();
        program += '\n';


        // !!! Tests //
        program += "int main() {\n";

        // Add statements
        for (auto s : statements)
            program += "\t" + s->toString() + "\n";

        // End of main
        program += "\n\treturn 0;\n}\n";
        // !!! End tests //

        return 0;
    }

    void Compiler::parseModules()
    {
        // TODO : Parse module names (convert to path)

        // Parse up files
        for (size_t i = 0; i < modules.size(); i++)
            if (modules[i].up)
                // TODO : Parse
                cout << "Up source to parse (WIP) : " << modules[i].name << '\n';

        // Include c files
        for (size_t i = 0; i < modules.size(); i++)
            if (!modules[i].up)
                program += "#include \"" + modules[i].name + ".h\"\n";
    }
} // namespace up
